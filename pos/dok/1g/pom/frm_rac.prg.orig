#include "\cl\sigma\fmk\pos\pos.ch"

*
*
*                    1            2               3              4
*  aVezani : {DOKS->IdPos, DOKS->(BrDok), DOKS->IdVrsteP, DOKS->Datum})
*
*   Parametri se prosledjuju sa @ - po referenci
*

FUNCTION PRacuni (dDat,cBroj, fPrep, fScope, cFil0, qIdRoba)

PRIVATE fMark := .F.
fPrep := IIF (fPrep==NIL, .F., fPrep)
cRacun:= IIF (cBroj==NIL, SPACE (LEN (POS->BrDok)), ALLTRIM (cBroj))

cIdPOS := LEFT (cRacun, AT ("-", cRacun)-1)
cIdPOS := PADR (cIdPOS, LEN (gIdPos))
IF gVrstaRS <> "S" .and. !Empty (cIdPos) .and. cIdPOS <> gIdPos
  MsgBeep ( "Racun nije napravljen na ovoj kasi!#" + ;
            "Ne mozete napraviti promjenu!", 20)
  RETURN (.F.)
ENDIF

cBroj := RIGHT (cRacun, LEN (cRacun)-AT("-", cRacun))
cBroj := PADL (cBroj, 6)


ImeKol:={{ "Broj racuna",{|| padr(trim(IdPos)+"-"+alltrim(BrDok),9)}},;
         { "Iznos",      {|| STR (SR_Iznos(), 13, 2)}},;
         { "Smj",        {|| smjena}      }, ;
         { "Datum",      {|| datum}     }, ;
         { "Vr.Pl",      {|| idvrstep} }, ;
         { "Partner",    {|| idgost} }, ;
         { "Vrijeme",    {|| vrijeme} }, ;
         { "Placen",     {|| IIF (Placen==PLAC_NIJE,"  NE","  DA")} } ;
        }
IF kLevel <= L_SEFSALE
  Kol:={1,2,3,4,5,6,7,8}
Else
  Kol:={1,2,3,4,5,6,7}
EndIF

SELECT DOKS
if fScope=NIL
  fScope:=.t.
endif
if cFil0=NIL
  cFil0:=""
endif

if fscope
  set scopebottom to "W"
endif

private cFilter:=cFil0+"IdVD='42'"
IF gVrstaRS == "S" .OR. KLevel < L_SEFSALE
  AADD (ImeKol, {"Radnik", {|| IdRadnik}})
  AADD (Kol, 6)
ELSE
  cFilter+=".and. IdRadnik="+cm2str(gIdRadnik)+".and. Idpos="+cm2str(gIdPos)
ENDIF

if kLevel==L_KONOBAR
 cFilter+='.and. Datum='+cm2str(dDat)
endif

if qIdRoba<>NIL .and. !EMPTY(qIdRoba)
  cFilter += ".and. SR_ImaRobu(IdPos+IdVd+dtos(datum)+BrDok,"+cm2str(qIdRoba)+")"
endif


SET FILTER TO &cFilter

IF !EMPTY (cBroj)
  Seek2 (cIdPos+"42"+dtos(dDat)+cBroj)
  IF FOUND ()
    cBroj:= AllTrim (DOKS->IdPos)+"-"+AllTrim (DOKS->BrDok)
    dDat := doks->datum
    RETURN (.T.)
  ENDIF
Else
  GO BOTTOM
ENDIF

IF fPrep
  cFnc := "<Enter>-Odabir   <+>-Markiraj/Demarkiraj   <P>-Pregled"
  fMark := .T.
  // ako je prepis, aVezani je privatna varijabla funkcije <PrepisRacuna>
  bMarkF := {|| RacObilj ()}
ELSE
  cFnc := "<Enter>-Odabir          <P>-Pregled"
  bMarkF := NIL
ENDIF
ObjDBedit ( , 20, 65, {|| EdPRacuni(fMark) }, ;
            IIF (gRadniRac=="D", "  STALNI ","  ")+"RACUNI  ", "", .F., ;
            cFnc, , bMarkF)
SET FILTER TO

cBroj := AllTrim (DOKS->IdPos)+"-"+AllTrim (DOKS->BrDok)
if cBroj='-'  // nema racuna
  cBroj:= space(9)
endif

dDat  := doks->datum

IF LASTKEY () == K_ESC
  RETURN (.F.)
ENDIF

RETURN (.T.)

FUNCTION EdPRacuni()
*
*   puni aVezani
*                    1            2               3              4
*  aVezani : {DOKS->IdPos, DOKS->(BrDok), DOKS->IdVrsteP, DOKS->Datum})

local cLevel
local ii
local nTrec, nTrec2

// M->Ch je iz OBJDB, fMark je iz PRacuni
IF M->Ch == 0
  RETURN (DE_CONT)
ENDIF
IF (LASTKEY ()==K_ESC) .or. (LASTKEY () == K_ENTER )
  RETURN (DE_ABORT)
ENDIF

O_STRAD
select strad; hseek gStrad
cLevel:=prioritet
use; select doks

IF fMark .and. (LastKey()==Asc("+"))
  nPos := ASCAN (aVezani, {|x| (x[1]+dtos(x[4])+x[2])==DOKS->(IdPos+dtos(datum)+BrDok)})
  IF nPos == 0
    IF Len (aVezani)==0 .or. ;
       (aVezani[1][3]==DOKS->IdVrsteP .and. aVezani[1][4]==DOKS->Datum)
      AADD (aVezani, {DOKS->IdPos, DOKS->(BrDok), DOKS->IdVrsteP, DOKS->Datum})
    ElseIF aVezani[1][3]<>DOKS->IdVrsteP
      MsgBeep ("Nemoguce spajanje!#Nacin placanja nije isti!")
    ElseIF aVezani[1][4]<>DOKS->Datum
      MsgBeep ("Nemoguce spajanje!#Datum racuna nije isti!")
    EndIF
  ELSE
    ADEL (aVezani, nPos)
    ASIZE (aVezani, LEN (aVezani)-1)
  ENDIF
  RETURN DE_REFRESH
ENDIF
IF UPPER ( CHR ( LASTKEY() ) ) == "P"
  PreglSRacun (DOKS->IdPos,doks->datum,DOKS->BrDok)
  RETURN DE_REFRESH
ENDIF

cLast:= UPPER ( CHR ( LASTKEY() ) )
IF KLevel="0" .and.  ( cLast == "D" .or. cLast == "S" .or. cLast=="V" )

    if Pitanje(,"Ispraviti vrijeme racuna ?","N")=="D"
       dOrigD:=Datum
       dDatum:=Datum
       cVrijeme:=Vrijeme

       set cursor on
       Box(,2,60)
        if cLast $ "SV"
          @ m_x+1,m_y+2 say "     Vrijeme" get cVrijeme
        endif
        if cLast $ "DV"
          @ m_x+2,m_y+2 say "Datum racuna" get dDatum
        endif
        read
       BoxC()
       if dOrigD<>dDatum .and. lastkey()!=K_ESC
         if cLast=="D"  // datum racuna
            fSvi:=.f.
            if pitanje(,"Zelite li ispravku datuma svih racuna datuma " + dtoc(dOrigD) + " ?")=="D"
             fSvi:=.t.
            endif
            cIdPos:=IdPos ; cIdvD:=IdvD
            do while !eof() .and. Datum==dOrigD .and.  idpos=cIdPos .and. IdVD==cIdVD
              skip
              nTDRec:=recno()
              skip -1

              select POS


              seek DOKS->(IdPos+IdVd+dtos(dDatum)+BrDok)
              if found()
                 MsgBeep("Vec postoji racun pod istim brojem "+dtoc(dDatum)+"/"+BrDok+" !")
                 select doks; go nTDRec
                 loop
              endif


              seek DOKS->(IdPos+IdVd+dtos(datum)+BrDok)
              do while !eof() .and. POS->(IdPos+IdVd+dtos(datum)+BrDok)==DOKS->(IdPos+IdVd+dtos(datum)+BrDok)
                skip; nTTTrec:=recno(); skip -1
                if cLast $ "DV"
                 replace Datum with dDatum
                endif
                go nTTTRec
              enddo
              select DOKS
              if cLast $ "SV"
               replace Vrijeme with cVrijeme
              endif
              if cLast $ "DV"
               replace Datum with dDatum
              endif

              UzmiIzIni(PRIVPATH+"fmk.ini",'POS','XPM',"0000", 'WRITE')
              if !fsvi; exit; endif

              go nTDRec
            enddo
         endif // datum racuna
       endif // K_ESC
    endif // pitanje

    return DE_REFRESH
endif


if cLevel<="0"   // samo sistem administrator
  if ch==K_F1
    MSgBeep("F5 - promjeni id racuna na X#"+;
            "F2 - promjena broja za X pmjesto#"+;
            "Ctrl-F9  - brisi fizicki#"+;
            "Shift-F9 - brisi fizicki period")
    return DE_CONT
  endif
  if ch==K_CTRL_F9
    return BrisiRacun()
  endif

  if ch==K_F2
      return PromBrRN()
  endif
  if ch==K_SH_F9
      return  BrisiRNVP()
  endif
  if ch==K_F5
       return PromIdPM()
  endif
  if ch==K_CTRL_F5
    return PromIdPMVP()
  endif
endif // KLEVEL - vlasnik
RETURN (DE_CONT)


FUNCTION SR_Iznos ()
*
*
* use: POS , DOKS
*
* koristi tekuci slog baze DOKS
*
* funkcija koja daje iznos racuna

nIznos := 0
SELECT POS
Seek2 (DOKS->(IdPos+IdVd+dtos(datum)+BrDok))
WHILE ! EOF() .and. POS->(IdPos+IdVd+dtos(datum)+BrDok)==DOKS->(IdPos+IdVd+dtos(datum)+BrDok)
  nIznos+=POS->(Kolicina * Cijena)
  SKIP
END
SELECT DOKS
RETURN (nIznos)

FUNCTION BrisiRacun()

if pitanje(,"Potpuno - fizicki izbrisati racun?","N")=="N"
	return DE_CONT
endif
SELECT DOKS
      cBrojR := DOKS->BrDok
      cIdPos := DOKS->IdPos
      cDatum := dtos(doks->datum)

      if empty(dMinDatProm)
        dMinDatProm:=DOKS->datum
      else
        dMinDatProm:=min(dMinDatProm,DOKS->datum)
      endif

      SELECT POS
      set order to 1
      Seek cIdPos+VD_RN+cDatum+cBrojR
      while !eof() .and. POS->(IdPos+IdVd+dtos(datum)+BrDok)==(cIdPos+VD_RN+cDatum+cBrojR)
        skip; nTTR:=recno(); skip -1
        delete        // DOKS
        sql_azur(.t.)
        sql_delete()
        go nTTR
      enddo
      SELECT DOKS
      delete       // DOKS
      sql_azur(.t.)
      sql_delete()


RETURN (DE_REFRESH)



